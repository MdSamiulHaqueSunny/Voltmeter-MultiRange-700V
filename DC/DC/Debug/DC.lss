
DC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000712  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000023dc  00000000  00000000  00000768  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000768  00000000  00000000  00002b44  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000080  00000000  00000000  000032b0  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000382  00000000  00000000  00003330  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000000b1  00000000  00000000  000036b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000021f  00000000  00000000  00003763  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  00003984  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000009b  00000000  00000000  000039a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000004ba  00000000  00000000  00003a43  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e2 e1       	ldi	r30, 0x12	; 18
  3a:	f7 e0       	ldi	r31, 0x07	; 7
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a0 36       	cpi	r26, 0x60	; 96
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	a0 e6       	ldi	r26, 0x60	; 96
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a0 36       	cpi	r26, 0x60	; 96
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	02 d0       	rcall	.+4      	; 0x5e <main>
  5a:	59 c3       	rjmp	.+1714   	; 0x70e <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <main>:
	double analog;
	double adc_value;
	unsigned int x,y,z;

	//port initialization
	DDRB = 0xF0;
  5e:	80 ef       	ldi	r24, 0xF0	; 240
  60:	87 bb       	out	0x17, r24	; 23
	DDRD = 0xFF;
  62:	9f ef       	ldi	r25, 0xFF	; 255
  64:	91 bb       	out	0x11, r25	; 17
	DDRC = 0xF0;
  66:	84 bb       	out	0x14, r24	; 20

	//ADC initialization
	ADMUX|=(1<< REFS0);
  68:	3e 9a       	sbi	0x07, 6	; 7
	ADCSRA |= (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
  6a:	86 b1       	in	r24, 0x06	; 6
  6c:	87 60       	ori	r24, 0x07	; 7
  6e:	86 b9       	out	0x06, r24	; 6
	ADCSRA |=(1<<ADEN);
  70:	37 9a       	sbi	0x06, 7	; 6
	ADMUX &=~(1<<MUX0) & ~(1<<MUX1) & ~(1<<MUX2) & ~(1<<MUX3);
  72:	87 b1       	in	r24, 0x07	; 7
  74:	80 7f       	andi	r24, 0xF0	; 240
  76:	87 b9       	out	0x07, r24	; 7
				analog = 0;
			}
			
		}

		else if (range == 0x04)
  78:	ee 24       	eor	r14, r14



	while(1)
	{
		range = PINB & 0x07;
  7a:	c6 b3       	in	r28, 0x16	; 22
  7c:	c7 70       	andi	r28, 0x07	; 7
		if( range == 0x00)
  7e:	11 f4       	brne	.+4      	; 0x84 <main+0x26>
		{
			PORTC |= (1<<PC5);
  80:	ad 9a       	sbi	0x15, 5	; 21
  82:	01 c0       	rjmp	.+2      	; 0x86 <main+0x28>
		}

		else
		{
			PORTC &= ~(1<<PC5);
  84:	ad 98       	cbi	0x15, 5	; 21
		}
		value = 0;
		analog = 0;

		ADCSRA|=(1<<ADSC); // start conversion
  86:	36 9a       	sbi	0x06, 6	; 6

		while (!(ADCSRA & (1<<ADIF)));
  88:	34 9b       	sbis	0x06, 4	; 6
  8a:	fe cf       	rjmp	.-4      	; 0x88 <main+0x2a>

		value = ADCL;
  8c:	64 b1       	in	r22, 0x04	; 4
  8e:	70 e0       	ldi	r23, 0x00	; 0
  90:	80 e0       	ldi	r24, 0x00	; 0
  92:	90 e0       	ldi	r25, 0x00	; 0
  94:	23 d2       	rcall	.+1094   	; 0x4dc <__floatunsisf>
  96:	16 2f       	mov	r17, r22
  98:	d7 2f       	mov	r29, r23
  9a:	08 2f       	mov	r16, r24
  9c:	f9 2e       	mov	r15, r25
		value += (ADCH<<8);
  9e:	85 b1       	in	r24, 0x05	; 5
  a0:	78 2e       	mov	r7, r24
  a2:	66 24       	eor	r6, r6
  a4:	b3 01       	movw	r22, r6
  a6:	88 27       	eor	r24, r24
  a8:	77 fd       	sbrc	r23, 7
  aa:	80 95       	com	r24
  ac:	98 2f       	mov	r25, r24
  ae:	18 d2       	rcall	.+1072   	; 0x4e0 <__floatsisf>
  b0:	50 2f       	mov	r21, r16
  b2:	01 2f       	mov	r16, r17
  b4:	1d 2f       	mov	r17, r29
  b6:	25 2f       	mov	r18, r21
  b8:	3f 2d       	mov	r19, r15
  ba:	a9 01       	movw	r20, r18
  bc:	98 01       	movw	r18, r16
  be:	12 d1       	rcall	.+548    	; 0x2e4 <__addsf3>
		ADCSRA |= (1<<ADIF);
  c0:	34 9a       	sbi	0x06, 4	; 6

		
		

		if (range == 0x01)
  c2:	c1 30       	cpi	r28, 0x01	; 1
  c4:	31 f5       	brne	.+76     	; 0x112 <main+0xb4>
		{
			analog = (833.33 * value)/1024;
  c6:	47 2f       	mov	r20, r23
  c8:	38 2f       	mov	r19, r24
  ca:	29 2f       	mov	r18, r25
  cc:	86 2f       	mov	r24, r22
  ce:	94 2f       	mov	r25, r20
  d0:	a3 2f       	mov	r26, r19
  d2:	b2 2f       	mov	r27, r18
  d4:	bc 01       	movw	r22, r24
  d6:	cd 01       	movw	r24, r26
  d8:	2f e1       	ldi	r18, 0x1F	; 31
  da:	35 e5       	ldi	r19, 0x55	; 85
  dc:	40 e5       	ldi	r20, 0x50	; 80
  de:	54 e4       	ldi	r21, 0x44	; 68
  e0:	b3 d2       	rcall	.+1382   	; 0x648 <__mulsf3>
  e2:	20 e0       	ldi	r18, 0x00	; 0
  e4:	30 e0       	ldi	r19, 0x00	; 0
  e6:	40 e8       	ldi	r20, 0x80	; 128
  e8:	5a e3       	ldi	r21, 0x3A	; 58
  ea:	ae d2       	rcall	.+1372   	; 0x648 <__mulsf3>
  ec:	06 2f       	mov	r16, r22
  ee:	17 2f       	mov	r17, r23
  f0:	d8 2f       	mov	r29, r24
  f2:	c9 2f       	mov	r28, r25
			if(analog > 710)
  f4:	86 2f       	mov	r24, r22
  f6:	91 2f       	mov	r25, r17
  f8:	ad 2f       	mov	r26, r29
  fa:	bc 2f       	mov	r27, r28
  fc:	bc 01       	movw	r22, r24
  fe:	cd 01       	movw	r24, r26
 100:	20 e0       	ldi	r18, 0x00	; 0
 102:	30 e8       	ldi	r19, 0x80	; 128
 104:	41 e3       	ldi	r20, 0x31	; 49
 106:	54 e4       	ldi	r21, 0x44	; 68
 108:	9b d2       	rcall	.+1334   	; 0x640 <__gesf2>
 10a:	18 16       	cp	r1, r24
 10c:	0c f4       	brge	.+2      	; 0x110 <main+0xb2>
 10e:	5c c0       	rjmp	.+184    	; 0x1c8 <main+0x16a>
 110:	4d c0       	rjmp	.+154    	; 0x1ac <main+0x14e>
			{
				analog = 0;
			}
		}

		else if (range == 0x02)
 112:	c2 30       	cpi	r28, 0x02	; 2
 114:	29 f5       	brne	.+74     	; 0x160 <main+0x102>
		{
			analog = (416.667 * value)/1024;
 116:	47 2f       	mov	r20, r23
 118:	38 2f       	mov	r19, r24
 11a:	29 2f       	mov	r18, r25
 11c:	86 2f       	mov	r24, r22
 11e:	94 2f       	mov	r25, r20
 120:	a3 2f       	mov	r26, r19
 122:	b2 2f       	mov	r27, r18
 124:	bc 01       	movw	r22, r24
 126:	cd 01       	movw	r24, r26
 128:	20 e6       	ldi	r18, 0x60	; 96
 12a:	35 e5       	ldi	r19, 0x55	; 85
 12c:	40 ed       	ldi	r20, 0xD0	; 208
 12e:	53 e4       	ldi	r21, 0x43	; 67
 130:	8b d2       	rcall	.+1302   	; 0x648 <__mulsf3>
 132:	20 e0       	ldi	r18, 0x00	; 0
 134:	30 e0       	ldi	r19, 0x00	; 0
 136:	40 e8       	ldi	r20, 0x80	; 128
 138:	5a e3       	ldi	r21, 0x3A	; 58
 13a:	86 d2       	rcall	.+1292   	; 0x648 <__mulsf3>
 13c:	06 2f       	mov	r16, r22
 13e:	17 2f       	mov	r17, r23
 140:	d8 2f       	mov	r29, r24
 142:	c9 2f       	mov	r28, r25
			if(analog > 353.56)
 144:	86 2f       	mov	r24, r22
 146:	91 2f       	mov	r25, r17
 148:	ad 2f       	mov	r26, r29
 14a:	bc 2f       	mov	r27, r28
 14c:	bc 01       	movw	r22, r24
 14e:	cd 01       	movw	r24, r26
 150:	2e ea       	ldi	r18, 0xAE	; 174
 152:	37 ec       	ldi	r19, 0xC7	; 199
 154:	40 eb       	ldi	r20, 0xB0	; 176
 156:	53 e4       	ldi	r21, 0x43	; 67
 158:	73 d2       	rcall	.+1254   	; 0x640 <__gesf2>
 15a:	18 16       	cp	r1, r24
 15c:	d4 f1       	brlt	.+116    	; 0x1d2 <main+0x174>
 15e:	26 c0       	rjmp	.+76     	; 0x1ac <main+0x14e>
				analog = 0;
			}
			
		}

		else if (range == 0x04)
 160:	c4 30       	cpi	r28, 0x04	; 4
 162:	e1 f5       	brne	.+120    	; 0x1dc <main+0x17e>
		{
			analog = (166.667 * value)/1024;
 164:	47 2f       	mov	r20, r23
 166:	38 2f       	mov	r19, r24
 168:	29 2f       	mov	r18, r25
 16a:	86 2f       	mov	r24, r22
 16c:	94 2f       	mov	r25, r20
 16e:	a3 2f       	mov	r26, r19
 170:	b2 2f       	mov	r27, r18
 172:	bc 01       	movw	r22, r24
 174:	cd 01       	movw	r24, r26
 176:	21 ec       	ldi	r18, 0xC1	; 193
 178:	3a ea       	ldi	r19, 0xAA	; 170
 17a:	46 e2       	ldi	r20, 0x26	; 38
 17c:	53 e4       	ldi	r21, 0x43	; 67
 17e:	64 d2       	rcall	.+1224   	; 0x648 <__mulsf3>
 180:	20 e0       	ldi	r18, 0x00	; 0
 182:	30 e0       	ldi	r19, 0x00	; 0
 184:	40 e8       	ldi	r20, 0x80	; 128
 186:	5a e3       	ldi	r21, 0x3A	; 58
 188:	5f d2       	rcall	.+1214   	; 0x648 <__mulsf3>
 18a:	06 2f       	mov	r16, r22
 18c:	17 2f       	mov	r17, r23
 18e:	d8 2f       	mov	r29, r24
 190:	c9 2f       	mov	r28, r25
			if(analog > 142)
 192:	86 2f       	mov	r24, r22
 194:	91 2f       	mov	r25, r17
 196:	ad 2f       	mov	r26, r29
 198:	bc 2f       	mov	r27, r28
 19a:	bc 01       	movw	r22, r24
 19c:	cd 01       	movw	r24, r26
 19e:	20 e0       	ldi	r18, 0x00	; 0
 1a0:	30 e0       	ldi	r19, 0x00	; 0
 1a2:	4e e0       	ldi	r20, 0x0E	; 14
 1a4:	53 e4       	ldi	r21, 0x43	; 67
 1a6:	4c d2       	rcall	.+1176   	; 0x640 <__gesf2>
 1a8:	18 16       	cp	r1, r24
 1aa:	ec f0       	brlt	.+58     	; 0x1e6 <main+0x188>

		
		adc_value=analog;


		if(adc_value < 10)
 1ac:	80 2f       	mov	r24, r16
 1ae:	91 2f       	mov	r25, r17
 1b0:	ad 2f       	mov	r26, r29
 1b2:	bc 2f       	mov	r27, r28
 1b4:	bc 01       	movw	r22, r24
 1b6:	cd 01       	movw	r24, r26
 1b8:	20 e0       	ldi	r18, 0x00	; 0
 1ba:	30 e0       	ldi	r19, 0x00	; 0
 1bc:	40 e2       	ldi	r20, 0x20	; 32
 1be:	51 e4       	ldi	r21, 0x41	; 65
 1c0:	f5 d0       	rcall	.+490    	; 0x3ac <__cmpsf2>
 1c2:	88 23       	and	r24, r24
 1c4:	f4 f4       	brge	.+60     	; 0x202 <main+0x1a4>
 1c6:	13 c0       	rjmp	.+38     	; 0x1ee <main+0x190>
		

		if (range == 0x01)
		{
			analog = (833.33 * value)/1024;
			if(analog > 710)
 1c8:	0e 2d       	mov	r16, r14
 1ca:	1e 2d       	mov	r17, r14
 1cc:	de 2d       	mov	r29, r14
 1ce:	ce 2d       	mov	r28, r14
 1d0:	0e c0       	rjmp	.+28     	; 0x1ee <main+0x190>
		}

		else if (range == 0x02)
		{
			analog = (416.667 * value)/1024;
			if(analog > 353.56)
 1d2:	0e 2d       	mov	r16, r14
 1d4:	1e 2d       	mov	r17, r14
 1d6:	de 2d       	mov	r29, r14
 1d8:	ce 2d       	mov	r28, r14
 1da:	09 c0       	rjmp	.+18     	; 0x1ee <main+0x190>
				analog = 0;
			}
			
		}

		else if (range == 0x04)
 1dc:	0e 2d       	mov	r16, r14
 1de:	1e 2d       	mov	r17, r14
 1e0:	de 2d       	mov	r29, r14
 1e2:	ce 2d       	mov	r28, r14
 1e4:	04 c0       	rjmp	.+8      	; 0x1ee <main+0x190>
		{
			analog = (166.667 * value)/1024;
			if(analog > 142)
 1e6:	0e 2d       	mov	r16, r14
 1e8:	1e 2d       	mov	r17, r14
 1ea:	de 2d       	mov	r29, r14
 1ec:	ce 2d       	mov	r28, r14
		{
			x = 0;
			y = 0;
			z = adc_value;

			PORTB = x;
 1ee:	18 ba       	out	0x18, r1	; 24

		if(adc_value < 10)
		{
			x = 0;
			y = 0;
			z = adc_value;
 1f0:	80 2f       	mov	r24, r16
 1f2:	91 2f       	mov	r25, r17
 1f4:	ad 2f       	mov	r26, r29
 1f6:	bc 2f       	mov	r27, r28
 1f8:	bc 01       	movw	r22, r24
 1fa:	cd 01       	movw	r24, r26
 1fc:	43 d1       	rcall	.+646    	; 0x484 <__fixunssfsi>

			PORTB = x;
			PORTD = z;
 1fe:	62 bb       	out	0x12, r22	; 18
 200:	3c cf       	rjmp	.-392    	; 0x7a <main+0x1c>
		}
		else
		{
			x=adc_value/100;
 202:	80 2f       	mov	r24, r16
 204:	91 2f       	mov	r25, r17
 206:	ad 2f       	mov	r26, r29
 208:	bc 2f       	mov	r27, r28
 20a:	bc 01       	movw	r22, r24
 20c:	cd 01       	movw	r24, r26
 20e:	20 e0       	ldi	r18, 0x00	; 0
 210:	30 e0       	ldi	r19, 0x00	; 0
 212:	48 ec       	ldi	r20, 0xC8	; 200
 214:	52 e4       	ldi	r21, 0x42	; 66
 216:	ce d0       	rcall	.+412    	; 0x3b4 <__divsf3>
 218:	35 d1       	rcall	.+618    	; 0x484 <__fixunssfsi>
 21a:	f6 2e       	mov	r15, r22
 21c:	d7 2e       	mov	r13, r23
			PORTB= (x<<4);//1st d
 21e:	86 2f       	mov	r24, r22
 220:	82 95       	swap	r24
 222:	80 7f       	andi	r24, 0xF0	; 240
 224:	88 bb       	out	0x18, r24	; 24
			adc_value=(adc_value/10-x*10);
 226:	80 2f       	mov	r24, r16
 228:	91 2f       	mov	r25, r17
 22a:	ad 2f       	mov	r26, r29
 22c:	bc 2f       	mov	r27, r28
 22e:	bc 01       	movw	r22, r24
 230:	cd 01       	movw	r24, r26
 232:	20 e0       	ldi	r18, 0x00	; 0
 234:	30 e0       	ldi	r19, 0x00	; 0
 236:	40 e2       	ldi	r20, 0x20	; 32
 238:	51 e4       	ldi	r21, 0x41	; 65
 23a:	bc d0       	rcall	.+376    	; 0x3b4 <__divsf3>
 23c:	4b 01       	movw	r8, r22
 23e:	5c 01       	movw	r10, r24
 240:	8f 2d       	mov	r24, r15
 242:	9d 2d       	mov	r25, r13
 244:	88 0f       	add	r24, r24
 246:	99 1f       	adc	r25, r25
 248:	bc 01       	movw	r22, r24
 24a:	66 0f       	add	r22, r22
 24c:	77 1f       	adc	r23, r23
 24e:	66 0f       	add	r22, r22
 250:	77 1f       	adc	r23, r23
 252:	86 0f       	add	r24, r22
 254:	97 1f       	adc	r25, r23
 256:	bc 01       	movw	r22, r24
 258:	80 e0       	ldi	r24, 0x00	; 0
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	3f d1       	rcall	.+638    	; 0x4dc <__floatunsisf>
 25e:	9b 01       	movw	r18, r22
 260:	ac 01       	movw	r20, r24
 262:	c5 01       	movw	r24, r10
 264:	b4 01       	movw	r22, r8
 266:	3d d0       	rcall	.+122    	; 0x2e2 <__subsf3>
 268:	06 2f       	mov	r16, r22
 26a:	17 2f       	mov	r17, r23
 26c:	d8 2f       	mov	r29, r24
 26e:	c9 2f       	mov	r28, r25
			y=adc_value;
 270:	86 2f       	mov	r24, r22
 272:	91 2f       	mov	r25, r17
 274:	ad 2f       	mov	r26, r29
 276:	bc 2f       	mov	r27, r28
 278:	bc 01       	movw	r22, r24
 27a:	cd 01       	movw	r24, r26
 27c:	03 d1       	rcall	.+518    	; 0x484 <__fixunssfsi>
 27e:	f6 2e       	mov	r15, r22
 280:	d7 2e       	mov	r13, r23
 282:	86 2e       	mov	r8, r22
			adc_value=(adc_value*10-y*10);
 284:	80 2f       	mov	r24, r16
 286:	91 2f       	mov	r25, r17
 288:	ad 2f       	mov	r26, r29
 28a:	bc 2f       	mov	r27, r28
 28c:	bc 01       	movw	r22, r24
 28e:	cd 01       	movw	r24, r26
 290:	20 e0       	ldi	r18, 0x00	; 0
 292:	30 e0       	ldi	r19, 0x00	; 0
 294:	40 e2       	ldi	r20, 0x20	; 32
 296:	51 e4       	ldi	r21, 0x41	; 65
 298:	d7 d1       	rcall	.+942    	; 0x648 <__mulsf3>
 29a:	c6 2f       	mov	r28, r22
 29c:	d7 2f       	mov	r29, r23
 29e:	18 2f       	mov	r17, r24
 2a0:	09 2f       	mov	r16, r25
 2a2:	8f 2d       	mov	r24, r15
 2a4:	9d 2d       	mov	r25, r13
 2a6:	88 0f       	add	r24, r24
 2a8:	99 1f       	adc	r25, r25
 2aa:	bc 01       	movw	r22, r24
 2ac:	66 0f       	add	r22, r22
 2ae:	77 1f       	adc	r23, r23
 2b0:	66 0f       	add	r22, r22
 2b2:	77 1f       	adc	r23, r23
 2b4:	86 0f       	add	r24, r22
 2b6:	97 1f       	adc	r25, r23
 2b8:	bc 01       	movw	r22, r24
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	0e d1       	rcall	.+540    	; 0x4dc <__floatunsisf>
 2c0:	9b 01       	movw	r18, r22
 2c2:	ac 01       	movw	r20, r24
 2c4:	8c 2f       	mov	r24, r28
 2c6:	9d 2f       	mov	r25, r29
 2c8:	a1 2f       	mov	r26, r17
 2ca:	b0 2f       	mov	r27, r16
 2cc:	bc 01       	movw	r22, r24
 2ce:	cd 01       	movw	r24, r26
 2d0:	08 d0       	rcall	.+16     	; 0x2e2 <__subsf3>
			z=adc_value;
 2d2:	d8 d0       	rcall	.+432    	; 0x484 <__fixunssfsi>
			PORTD =(y<<4)+ z; //2nd digit and 3rd digit
 2d4:	88 0c       	add	r8, r8
 2d6:	88 0c       	add	r8, r8
 2d8:	88 0c       	add	r8, r8
 2da:	88 0c       	add	r8, r8
 2dc:	68 0d       	add	r22, r8
 2de:	62 bb       	out	0x12, r22	; 18
 2e0:	cc ce       	rjmp	.-616    	; 0x7a <main+0x1c>

000002e2 <__subsf3>:
 2e2:	50 58       	subi	r21, 0x80	; 128

000002e4 <__addsf3>:
 2e4:	bb 27       	eor	r27, r27
 2e6:	aa 27       	eor	r26, r26
 2e8:	0e d0       	rcall	.+28     	; 0x306 <__addsf3x>
 2ea:	70 c1       	rjmp	.+736    	; 0x5cc <__fp_round>
 2ec:	61 d1       	rcall	.+706    	; 0x5b0 <__fp_pscA>
 2ee:	30 f0       	brcs	.+12     	; 0x2fc <__addsf3+0x18>
 2f0:	66 d1       	rcall	.+716    	; 0x5be <__fp_pscB>
 2f2:	20 f0       	brcs	.+8      	; 0x2fc <__addsf3+0x18>
 2f4:	31 f4       	brne	.+12     	; 0x302 <__addsf3+0x1e>
 2f6:	9f 3f       	cpi	r25, 0xFF	; 255
 2f8:	11 f4       	brne	.+4      	; 0x2fe <__addsf3+0x1a>
 2fa:	1e f4       	brtc	.+6      	; 0x302 <__addsf3+0x1e>
 2fc:	56 c1       	rjmp	.+684    	; 0x5aa <__fp_nan>
 2fe:	0e f4       	brtc	.+2      	; 0x302 <__addsf3+0x1e>
 300:	e0 95       	com	r30
 302:	e7 fb       	bst	r30, 7
 304:	4c c1       	rjmp	.+664    	; 0x59e <__fp_inf>

00000306 <__addsf3x>:
 306:	e9 2f       	mov	r30, r25
 308:	72 d1       	rcall	.+740    	; 0x5ee <__fp_split3>
 30a:	80 f3       	brcs	.-32     	; 0x2ec <__addsf3+0x8>
 30c:	ba 17       	cp	r27, r26
 30e:	62 07       	cpc	r22, r18
 310:	73 07       	cpc	r23, r19
 312:	84 07       	cpc	r24, r20
 314:	95 07       	cpc	r25, r21
 316:	18 f0       	brcs	.+6      	; 0x31e <__addsf3x+0x18>
 318:	71 f4       	brne	.+28     	; 0x336 <__addsf3x+0x30>
 31a:	9e f5       	brtc	.+102    	; 0x382 <__addsf3x+0x7c>
 31c:	8a c1       	rjmp	.+788    	; 0x632 <__fp_zero>
 31e:	0e f4       	brtc	.+2      	; 0x322 <__addsf3x+0x1c>
 320:	e0 95       	com	r30
 322:	0b 2e       	mov	r0, r27
 324:	ba 2f       	mov	r27, r26
 326:	a0 2d       	mov	r26, r0
 328:	0b 01       	movw	r0, r22
 32a:	b9 01       	movw	r22, r18
 32c:	90 01       	movw	r18, r0
 32e:	0c 01       	movw	r0, r24
 330:	ca 01       	movw	r24, r20
 332:	a0 01       	movw	r20, r0
 334:	11 24       	eor	r1, r1
 336:	ff 27       	eor	r31, r31
 338:	59 1b       	sub	r21, r25
 33a:	99 f0       	breq	.+38     	; 0x362 <__addsf3x+0x5c>
 33c:	59 3f       	cpi	r21, 0xF9	; 249
 33e:	50 f4       	brcc	.+20     	; 0x354 <__addsf3x+0x4e>
 340:	50 3e       	cpi	r21, 0xE0	; 224
 342:	68 f1       	brcs	.+90     	; 0x39e <__addsf3x+0x98>
 344:	1a 16       	cp	r1, r26
 346:	f0 40       	sbci	r31, 0x00	; 0
 348:	a2 2f       	mov	r26, r18
 34a:	23 2f       	mov	r18, r19
 34c:	34 2f       	mov	r19, r20
 34e:	44 27       	eor	r20, r20
 350:	58 5f       	subi	r21, 0xF8	; 248
 352:	f3 cf       	rjmp	.-26     	; 0x33a <__addsf3x+0x34>
 354:	46 95       	lsr	r20
 356:	37 95       	ror	r19
 358:	27 95       	ror	r18
 35a:	a7 95       	ror	r26
 35c:	f0 40       	sbci	r31, 0x00	; 0
 35e:	53 95       	inc	r21
 360:	c9 f7       	brne	.-14     	; 0x354 <__addsf3x+0x4e>
 362:	7e f4       	brtc	.+30     	; 0x382 <__addsf3x+0x7c>
 364:	1f 16       	cp	r1, r31
 366:	ba 0b       	sbc	r27, r26
 368:	62 0b       	sbc	r22, r18
 36a:	73 0b       	sbc	r23, r19
 36c:	84 0b       	sbc	r24, r20
 36e:	ba f0       	brmi	.+46     	; 0x39e <__addsf3x+0x98>
 370:	91 50       	subi	r25, 0x01	; 1
 372:	a1 f0       	breq	.+40     	; 0x39c <__addsf3x+0x96>
 374:	ff 0f       	add	r31, r31
 376:	bb 1f       	adc	r27, r27
 378:	66 1f       	adc	r22, r22
 37a:	77 1f       	adc	r23, r23
 37c:	88 1f       	adc	r24, r24
 37e:	c2 f7       	brpl	.-16     	; 0x370 <__addsf3x+0x6a>
 380:	0e c0       	rjmp	.+28     	; 0x39e <__addsf3x+0x98>
 382:	ba 0f       	add	r27, r26
 384:	62 1f       	adc	r22, r18
 386:	73 1f       	adc	r23, r19
 388:	84 1f       	adc	r24, r20
 38a:	48 f4       	brcc	.+18     	; 0x39e <__addsf3x+0x98>
 38c:	87 95       	ror	r24
 38e:	77 95       	ror	r23
 390:	67 95       	ror	r22
 392:	b7 95       	ror	r27
 394:	f7 95       	ror	r31
 396:	9e 3f       	cpi	r25, 0xFE	; 254
 398:	08 f0       	brcs	.+2      	; 0x39c <__addsf3x+0x96>
 39a:	b3 cf       	rjmp	.-154    	; 0x302 <__addsf3+0x1e>
 39c:	93 95       	inc	r25
 39e:	88 0f       	add	r24, r24
 3a0:	08 f0       	brcs	.+2      	; 0x3a4 <__addsf3x+0x9e>
 3a2:	99 27       	eor	r25, r25
 3a4:	ee 0f       	add	r30, r30
 3a6:	97 95       	ror	r25
 3a8:	87 95       	ror	r24
 3aa:	08 95       	ret

000003ac <__cmpsf2>:
 3ac:	d4 d0       	rcall	.+424    	; 0x556 <__fp_cmp>
 3ae:	08 f4       	brcc	.+2      	; 0x3b2 <__cmpsf2+0x6>
 3b0:	81 e0       	ldi	r24, 0x01	; 1
 3b2:	08 95       	ret

000003b4 <__divsf3>:
 3b4:	0c d0       	rcall	.+24     	; 0x3ce <__divsf3x>
 3b6:	0a c1       	rjmp	.+532    	; 0x5cc <__fp_round>
 3b8:	02 d1       	rcall	.+516    	; 0x5be <__fp_pscB>
 3ba:	40 f0       	brcs	.+16     	; 0x3cc <__divsf3+0x18>
 3bc:	f9 d0       	rcall	.+498    	; 0x5b0 <__fp_pscA>
 3be:	30 f0       	brcs	.+12     	; 0x3cc <__divsf3+0x18>
 3c0:	21 f4       	brne	.+8      	; 0x3ca <__divsf3+0x16>
 3c2:	5f 3f       	cpi	r21, 0xFF	; 255
 3c4:	19 f0       	breq	.+6      	; 0x3cc <__divsf3+0x18>
 3c6:	eb c0       	rjmp	.+470    	; 0x59e <__fp_inf>
 3c8:	51 11       	cpse	r21, r1
 3ca:	34 c1       	rjmp	.+616    	; 0x634 <__fp_szero>
 3cc:	ee c0       	rjmp	.+476    	; 0x5aa <__fp_nan>

000003ce <__divsf3x>:
 3ce:	0f d1       	rcall	.+542    	; 0x5ee <__fp_split3>
 3d0:	98 f3       	brcs	.-26     	; 0x3b8 <__divsf3+0x4>

000003d2 <__divsf3_pse>:
 3d2:	99 23       	and	r25, r25
 3d4:	c9 f3       	breq	.-14     	; 0x3c8 <__divsf3+0x14>
 3d6:	55 23       	and	r21, r21
 3d8:	b1 f3       	breq	.-20     	; 0x3c6 <__divsf3+0x12>
 3da:	95 1b       	sub	r25, r21
 3dc:	55 0b       	sbc	r21, r21
 3de:	bb 27       	eor	r27, r27
 3e0:	aa 27       	eor	r26, r26
 3e2:	62 17       	cp	r22, r18
 3e4:	73 07       	cpc	r23, r19
 3e6:	84 07       	cpc	r24, r20
 3e8:	38 f0       	brcs	.+14     	; 0x3f8 <__divsf3_pse+0x26>
 3ea:	9f 5f       	subi	r25, 0xFF	; 255
 3ec:	5f 4f       	sbci	r21, 0xFF	; 255
 3ee:	22 0f       	add	r18, r18
 3f0:	33 1f       	adc	r19, r19
 3f2:	44 1f       	adc	r20, r20
 3f4:	aa 1f       	adc	r26, r26
 3f6:	a9 f3       	breq	.-22     	; 0x3e2 <__divsf3_pse+0x10>
 3f8:	33 d0       	rcall	.+102    	; 0x460 <__stack+0x1>
 3fa:	0e 2e       	mov	r0, r30
 3fc:	3a f0       	brmi	.+14     	; 0x40c <__divsf3_pse+0x3a>
 3fe:	e0 e8       	ldi	r30, 0x80	; 128
 400:	30 d0       	rcall	.+96     	; 0x462 <__stack+0x3>
 402:	91 50       	subi	r25, 0x01	; 1
 404:	50 40       	sbci	r21, 0x00	; 0
 406:	e6 95       	lsr	r30
 408:	00 1c       	adc	r0, r0
 40a:	ca f7       	brpl	.-14     	; 0x3fe <__divsf3_pse+0x2c>
 40c:	29 d0       	rcall	.+82     	; 0x460 <__stack+0x1>
 40e:	fe 2f       	mov	r31, r30
 410:	27 d0       	rcall	.+78     	; 0x460 <__stack+0x1>
 412:	66 0f       	add	r22, r22
 414:	77 1f       	adc	r23, r23
 416:	88 1f       	adc	r24, r24
 418:	bb 1f       	adc	r27, r27
 41a:	26 17       	cp	r18, r22
 41c:	37 07       	cpc	r19, r23
 41e:	48 07       	cpc	r20, r24
 420:	ab 07       	cpc	r26, r27
 422:	b0 e8       	ldi	r27, 0x80	; 128
 424:	09 f0       	breq	.+2      	; 0x428 <__divsf3_pse+0x56>
 426:	bb 0b       	sbc	r27, r27
 428:	80 2d       	mov	r24, r0
 42a:	bf 01       	movw	r22, r30
 42c:	ff 27       	eor	r31, r31
 42e:	93 58       	subi	r25, 0x83	; 131
 430:	5f 4f       	sbci	r21, 0xFF	; 255
 432:	2a f0       	brmi	.+10     	; 0x43e <__divsf3_pse+0x6c>
 434:	9e 3f       	cpi	r25, 0xFE	; 254
 436:	51 05       	cpc	r21, r1
 438:	68 f0       	brcs	.+26     	; 0x454 <__divsf3_pse+0x82>
 43a:	b1 c0       	rjmp	.+354    	; 0x59e <__fp_inf>
 43c:	fb c0       	rjmp	.+502    	; 0x634 <__fp_szero>
 43e:	5f 3f       	cpi	r21, 0xFF	; 255
 440:	ec f3       	brlt	.-6      	; 0x43c <__divsf3_pse+0x6a>
 442:	98 3e       	cpi	r25, 0xE8	; 232
 444:	dc f3       	brlt	.-10     	; 0x43c <__divsf3_pse+0x6a>
 446:	86 95       	lsr	r24
 448:	77 95       	ror	r23
 44a:	67 95       	ror	r22
 44c:	b7 95       	ror	r27
 44e:	f7 95       	ror	r31
 450:	9f 5f       	subi	r25, 0xFF	; 255
 452:	c9 f7       	brne	.-14     	; 0x446 <__divsf3_pse+0x74>
 454:	88 0f       	add	r24, r24
 456:	91 1d       	adc	r25, r1
 458:	96 95       	lsr	r25
 45a:	87 95       	ror	r24
 45c:	97 f9       	bld	r25, 7
 45e:	08 95       	ret
 460:	e1 e0       	ldi	r30, 0x01	; 1
 462:	66 0f       	add	r22, r22
 464:	77 1f       	adc	r23, r23
 466:	88 1f       	adc	r24, r24
 468:	bb 1f       	adc	r27, r27
 46a:	62 17       	cp	r22, r18
 46c:	73 07       	cpc	r23, r19
 46e:	84 07       	cpc	r24, r20
 470:	ba 07       	cpc	r27, r26
 472:	20 f0       	brcs	.+8      	; 0x47c <__stack+0x1d>
 474:	62 1b       	sub	r22, r18
 476:	73 0b       	sbc	r23, r19
 478:	84 0b       	sbc	r24, r20
 47a:	ba 0b       	sbc	r27, r26
 47c:	ee 1f       	adc	r30, r30
 47e:	88 f7       	brcc	.-30     	; 0x462 <__stack+0x3>
 480:	e0 95       	com	r30
 482:	08 95       	ret

00000484 <__fixunssfsi>:
 484:	bc d0       	rcall	.+376    	; 0x5fe <__fp_splitA>
 486:	88 f0       	brcs	.+34     	; 0x4aa <__fixunssfsi+0x26>
 488:	9f 57       	subi	r25, 0x7F	; 127
 48a:	90 f0       	brcs	.+36     	; 0x4b0 <__fixunssfsi+0x2c>
 48c:	b9 2f       	mov	r27, r25
 48e:	99 27       	eor	r25, r25
 490:	b7 51       	subi	r27, 0x17	; 23
 492:	a0 f0       	brcs	.+40     	; 0x4bc <__fixunssfsi+0x38>
 494:	d1 f0       	breq	.+52     	; 0x4ca <__fixunssfsi+0x46>
 496:	66 0f       	add	r22, r22
 498:	77 1f       	adc	r23, r23
 49a:	88 1f       	adc	r24, r24
 49c:	99 1f       	adc	r25, r25
 49e:	1a f0       	brmi	.+6      	; 0x4a6 <__fixunssfsi+0x22>
 4a0:	ba 95       	dec	r27
 4a2:	c9 f7       	brne	.-14     	; 0x496 <__fixunssfsi+0x12>
 4a4:	12 c0       	rjmp	.+36     	; 0x4ca <__fixunssfsi+0x46>
 4a6:	b1 30       	cpi	r27, 0x01	; 1
 4a8:	81 f0       	breq	.+32     	; 0x4ca <__fixunssfsi+0x46>
 4aa:	c3 d0       	rcall	.+390    	; 0x632 <__fp_zero>
 4ac:	b1 e0       	ldi	r27, 0x01	; 1
 4ae:	08 95       	ret
 4b0:	c0 c0       	rjmp	.+384    	; 0x632 <__fp_zero>
 4b2:	67 2f       	mov	r22, r23
 4b4:	78 2f       	mov	r23, r24
 4b6:	88 27       	eor	r24, r24
 4b8:	b8 5f       	subi	r27, 0xF8	; 248
 4ba:	39 f0       	breq	.+14     	; 0x4ca <__fixunssfsi+0x46>
 4bc:	b9 3f       	cpi	r27, 0xF9	; 249
 4be:	cc f3       	brlt	.-14     	; 0x4b2 <__fixunssfsi+0x2e>
 4c0:	86 95       	lsr	r24
 4c2:	77 95       	ror	r23
 4c4:	67 95       	ror	r22
 4c6:	b3 95       	inc	r27
 4c8:	d9 f7       	brne	.-10     	; 0x4c0 <__fixunssfsi+0x3c>
 4ca:	3e f4       	brtc	.+14     	; 0x4da <__fixunssfsi+0x56>
 4cc:	90 95       	com	r25
 4ce:	80 95       	com	r24
 4d0:	70 95       	com	r23
 4d2:	61 95       	neg	r22
 4d4:	7f 4f       	sbci	r23, 0xFF	; 255
 4d6:	8f 4f       	sbci	r24, 0xFF	; 255
 4d8:	9f 4f       	sbci	r25, 0xFF	; 255
 4da:	08 95       	ret

000004dc <__floatunsisf>:
 4dc:	e8 94       	clt
 4de:	09 c0       	rjmp	.+18     	; 0x4f2 <__floatsisf+0x12>

000004e0 <__floatsisf>:
 4e0:	97 fb       	bst	r25, 7
 4e2:	3e f4       	brtc	.+14     	; 0x4f2 <__floatsisf+0x12>
 4e4:	90 95       	com	r25
 4e6:	80 95       	com	r24
 4e8:	70 95       	com	r23
 4ea:	61 95       	neg	r22
 4ec:	7f 4f       	sbci	r23, 0xFF	; 255
 4ee:	8f 4f       	sbci	r24, 0xFF	; 255
 4f0:	9f 4f       	sbci	r25, 0xFF	; 255
 4f2:	99 23       	and	r25, r25
 4f4:	a9 f0       	breq	.+42     	; 0x520 <__floatsisf+0x40>
 4f6:	f9 2f       	mov	r31, r25
 4f8:	96 e9       	ldi	r25, 0x96	; 150
 4fa:	bb 27       	eor	r27, r27
 4fc:	93 95       	inc	r25
 4fe:	f6 95       	lsr	r31
 500:	87 95       	ror	r24
 502:	77 95       	ror	r23
 504:	67 95       	ror	r22
 506:	b7 95       	ror	r27
 508:	f1 11       	cpse	r31, r1
 50a:	f8 cf       	rjmp	.-16     	; 0x4fc <__floatsisf+0x1c>
 50c:	fa f4       	brpl	.+62     	; 0x54c <__floatsisf+0x6c>
 50e:	bb 0f       	add	r27, r27
 510:	11 f4       	brne	.+4      	; 0x516 <__floatsisf+0x36>
 512:	60 ff       	sbrs	r22, 0
 514:	1b c0       	rjmp	.+54     	; 0x54c <__floatsisf+0x6c>
 516:	6f 5f       	subi	r22, 0xFF	; 255
 518:	7f 4f       	sbci	r23, 0xFF	; 255
 51a:	8f 4f       	sbci	r24, 0xFF	; 255
 51c:	9f 4f       	sbci	r25, 0xFF	; 255
 51e:	16 c0       	rjmp	.+44     	; 0x54c <__floatsisf+0x6c>
 520:	88 23       	and	r24, r24
 522:	11 f0       	breq	.+4      	; 0x528 <__floatsisf+0x48>
 524:	96 e9       	ldi	r25, 0x96	; 150
 526:	11 c0       	rjmp	.+34     	; 0x54a <__floatsisf+0x6a>
 528:	77 23       	and	r23, r23
 52a:	21 f0       	breq	.+8      	; 0x534 <__floatsisf+0x54>
 52c:	9e e8       	ldi	r25, 0x8E	; 142
 52e:	87 2f       	mov	r24, r23
 530:	76 2f       	mov	r23, r22
 532:	05 c0       	rjmp	.+10     	; 0x53e <__floatsisf+0x5e>
 534:	66 23       	and	r22, r22
 536:	71 f0       	breq	.+28     	; 0x554 <__floatsisf+0x74>
 538:	96 e8       	ldi	r25, 0x86	; 134
 53a:	86 2f       	mov	r24, r22
 53c:	70 e0       	ldi	r23, 0x00	; 0
 53e:	60 e0       	ldi	r22, 0x00	; 0
 540:	2a f0       	brmi	.+10     	; 0x54c <__floatsisf+0x6c>
 542:	9a 95       	dec	r25
 544:	66 0f       	add	r22, r22
 546:	77 1f       	adc	r23, r23
 548:	88 1f       	adc	r24, r24
 54a:	da f7       	brpl	.-10     	; 0x542 <__floatsisf+0x62>
 54c:	88 0f       	add	r24, r24
 54e:	96 95       	lsr	r25
 550:	87 95       	ror	r24
 552:	97 f9       	bld	r25, 7
 554:	08 95       	ret

00000556 <__fp_cmp>:
 556:	99 0f       	add	r25, r25
 558:	00 08       	sbc	r0, r0
 55a:	55 0f       	add	r21, r21
 55c:	aa 0b       	sbc	r26, r26
 55e:	e0 e8       	ldi	r30, 0x80	; 128
 560:	fe ef       	ldi	r31, 0xFE	; 254
 562:	16 16       	cp	r1, r22
 564:	17 06       	cpc	r1, r23
 566:	e8 07       	cpc	r30, r24
 568:	f9 07       	cpc	r31, r25
 56a:	c0 f0       	brcs	.+48     	; 0x59c <__fp_cmp+0x46>
 56c:	12 16       	cp	r1, r18
 56e:	13 06       	cpc	r1, r19
 570:	e4 07       	cpc	r30, r20
 572:	f5 07       	cpc	r31, r21
 574:	98 f0       	brcs	.+38     	; 0x59c <__fp_cmp+0x46>
 576:	62 1b       	sub	r22, r18
 578:	73 0b       	sbc	r23, r19
 57a:	84 0b       	sbc	r24, r20
 57c:	95 0b       	sbc	r25, r21
 57e:	39 f4       	brne	.+14     	; 0x58e <__fp_cmp+0x38>
 580:	0a 26       	eor	r0, r26
 582:	61 f0       	breq	.+24     	; 0x59c <__fp_cmp+0x46>
 584:	23 2b       	or	r18, r19
 586:	24 2b       	or	r18, r20
 588:	25 2b       	or	r18, r21
 58a:	21 f4       	brne	.+8      	; 0x594 <__fp_cmp+0x3e>
 58c:	08 95       	ret
 58e:	0a 26       	eor	r0, r26
 590:	09 f4       	brne	.+2      	; 0x594 <__fp_cmp+0x3e>
 592:	a1 40       	sbci	r26, 0x01	; 1
 594:	a6 95       	lsr	r26
 596:	8f ef       	ldi	r24, 0xFF	; 255
 598:	81 1d       	adc	r24, r1
 59a:	81 1d       	adc	r24, r1
 59c:	08 95       	ret

0000059e <__fp_inf>:
 59e:	97 f9       	bld	r25, 7
 5a0:	9f 67       	ori	r25, 0x7F	; 127
 5a2:	80 e8       	ldi	r24, 0x80	; 128
 5a4:	70 e0       	ldi	r23, 0x00	; 0
 5a6:	60 e0       	ldi	r22, 0x00	; 0
 5a8:	08 95       	ret

000005aa <__fp_nan>:
 5aa:	9f ef       	ldi	r25, 0xFF	; 255
 5ac:	80 ec       	ldi	r24, 0xC0	; 192
 5ae:	08 95       	ret

000005b0 <__fp_pscA>:
 5b0:	00 24       	eor	r0, r0
 5b2:	0a 94       	dec	r0
 5b4:	16 16       	cp	r1, r22
 5b6:	17 06       	cpc	r1, r23
 5b8:	18 06       	cpc	r1, r24
 5ba:	09 06       	cpc	r0, r25
 5bc:	08 95       	ret

000005be <__fp_pscB>:
 5be:	00 24       	eor	r0, r0
 5c0:	0a 94       	dec	r0
 5c2:	12 16       	cp	r1, r18
 5c4:	13 06       	cpc	r1, r19
 5c6:	14 06       	cpc	r1, r20
 5c8:	05 06       	cpc	r0, r21
 5ca:	08 95       	ret

000005cc <__fp_round>:
 5cc:	09 2e       	mov	r0, r25
 5ce:	03 94       	inc	r0
 5d0:	00 0c       	add	r0, r0
 5d2:	11 f4       	brne	.+4      	; 0x5d8 <__fp_round+0xc>
 5d4:	88 23       	and	r24, r24
 5d6:	52 f0       	brmi	.+20     	; 0x5ec <__fp_round+0x20>
 5d8:	bb 0f       	add	r27, r27
 5da:	40 f4       	brcc	.+16     	; 0x5ec <__fp_round+0x20>
 5dc:	bf 2b       	or	r27, r31
 5de:	11 f4       	brne	.+4      	; 0x5e4 <__fp_round+0x18>
 5e0:	60 ff       	sbrs	r22, 0
 5e2:	04 c0       	rjmp	.+8      	; 0x5ec <__fp_round+0x20>
 5e4:	6f 5f       	subi	r22, 0xFF	; 255
 5e6:	7f 4f       	sbci	r23, 0xFF	; 255
 5e8:	8f 4f       	sbci	r24, 0xFF	; 255
 5ea:	9f 4f       	sbci	r25, 0xFF	; 255
 5ec:	08 95       	ret

000005ee <__fp_split3>:
 5ee:	57 fd       	sbrc	r21, 7
 5f0:	90 58       	subi	r25, 0x80	; 128
 5f2:	44 0f       	add	r20, r20
 5f4:	55 1f       	adc	r21, r21
 5f6:	59 f0       	breq	.+22     	; 0x60e <__fp_splitA+0x10>
 5f8:	5f 3f       	cpi	r21, 0xFF	; 255
 5fa:	71 f0       	breq	.+28     	; 0x618 <__fp_splitA+0x1a>
 5fc:	47 95       	ror	r20

000005fe <__fp_splitA>:
 5fe:	88 0f       	add	r24, r24
 600:	97 fb       	bst	r25, 7
 602:	99 1f       	adc	r25, r25
 604:	61 f0       	breq	.+24     	; 0x61e <__fp_splitA+0x20>
 606:	9f 3f       	cpi	r25, 0xFF	; 255
 608:	79 f0       	breq	.+30     	; 0x628 <__fp_splitA+0x2a>
 60a:	87 95       	ror	r24
 60c:	08 95       	ret
 60e:	12 16       	cp	r1, r18
 610:	13 06       	cpc	r1, r19
 612:	14 06       	cpc	r1, r20
 614:	55 1f       	adc	r21, r21
 616:	f2 cf       	rjmp	.-28     	; 0x5fc <__fp_split3+0xe>
 618:	46 95       	lsr	r20
 61a:	f1 df       	rcall	.-30     	; 0x5fe <__fp_splitA>
 61c:	08 c0       	rjmp	.+16     	; 0x62e <__fp_splitA+0x30>
 61e:	16 16       	cp	r1, r22
 620:	17 06       	cpc	r1, r23
 622:	18 06       	cpc	r1, r24
 624:	99 1f       	adc	r25, r25
 626:	f1 cf       	rjmp	.-30     	; 0x60a <__fp_splitA+0xc>
 628:	86 95       	lsr	r24
 62a:	71 05       	cpc	r23, r1
 62c:	61 05       	cpc	r22, r1
 62e:	08 94       	sec
 630:	08 95       	ret

00000632 <__fp_zero>:
 632:	e8 94       	clt

00000634 <__fp_szero>:
 634:	bb 27       	eor	r27, r27
 636:	66 27       	eor	r22, r22
 638:	77 27       	eor	r23, r23
 63a:	cb 01       	movw	r24, r22
 63c:	97 f9       	bld	r25, 7
 63e:	08 95       	ret

00000640 <__gesf2>:
 640:	8a df       	rcall	.-236    	; 0x556 <__fp_cmp>
 642:	08 f4       	brcc	.+2      	; 0x646 <__gesf2+0x6>
 644:	8f ef       	ldi	r24, 0xFF	; 255
 646:	08 95       	ret

00000648 <__mulsf3>:
 648:	0b d0       	rcall	.+22     	; 0x660 <__mulsf3x>
 64a:	c0 cf       	rjmp	.-128    	; 0x5cc <__fp_round>
 64c:	b1 df       	rcall	.-158    	; 0x5b0 <__fp_pscA>
 64e:	28 f0       	brcs	.+10     	; 0x65a <__mulsf3+0x12>
 650:	b6 df       	rcall	.-148    	; 0x5be <__fp_pscB>
 652:	18 f0       	brcs	.+6      	; 0x65a <__mulsf3+0x12>
 654:	95 23       	and	r25, r21
 656:	09 f0       	breq	.+2      	; 0x65a <__mulsf3+0x12>
 658:	a2 cf       	rjmp	.-188    	; 0x59e <__fp_inf>
 65a:	a7 cf       	rjmp	.-178    	; 0x5aa <__fp_nan>
 65c:	11 24       	eor	r1, r1
 65e:	ea cf       	rjmp	.-44     	; 0x634 <__fp_szero>

00000660 <__mulsf3x>:
 660:	c6 df       	rcall	.-116    	; 0x5ee <__fp_split3>
 662:	a0 f3       	brcs	.-24     	; 0x64c <__mulsf3+0x4>

00000664 <__mulsf3_pse>:
 664:	95 9f       	mul	r25, r21
 666:	d1 f3       	breq	.-12     	; 0x65c <__mulsf3+0x14>
 668:	95 0f       	add	r25, r21
 66a:	50 e0       	ldi	r21, 0x00	; 0
 66c:	55 1f       	adc	r21, r21
 66e:	62 9f       	mul	r22, r18
 670:	f0 01       	movw	r30, r0
 672:	72 9f       	mul	r23, r18
 674:	bb 27       	eor	r27, r27
 676:	f0 0d       	add	r31, r0
 678:	b1 1d       	adc	r27, r1
 67a:	63 9f       	mul	r22, r19
 67c:	aa 27       	eor	r26, r26
 67e:	f0 0d       	add	r31, r0
 680:	b1 1d       	adc	r27, r1
 682:	aa 1f       	adc	r26, r26
 684:	64 9f       	mul	r22, r20
 686:	66 27       	eor	r22, r22
 688:	b0 0d       	add	r27, r0
 68a:	a1 1d       	adc	r26, r1
 68c:	66 1f       	adc	r22, r22
 68e:	82 9f       	mul	r24, r18
 690:	22 27       	eor	r18, r18
 692:	b0 0d       	add	r27, r0
 694:	a1 1d       	adc	r26, r1
 696:	62 1f       	adc	r22, r18
 698:	73 9f       	mul	r23, r19
 69a:	b0 0d       	add	r27, r0
 69c:	a1 1d       	adc	r26, r1
 69e:	62 1f       	adc	r22, r18
 6a0:	83 9f       	mul	r24, r19
 6a2:	a0 0d       	add	r26, r0
 6a4:	61 1d       	adc	r22, r1
 6a6:	22 1f       	adc	r18, r18
 6a8:	74 9f       	mul	r23, r20
 6aa:	33 27       	eor	r19, r19
 6ac:	a0 0d       	add	r26, r0
 6ae:	61 1d       	adc	r22, r1
 6b0:	23 1f       	adc	r18, r19
 6b2:	84 9f       	mul	r24, r20
 6b4:	60 0d       	add	r22, r0
 6b6:	21 1d       	adc	r18, r1
 6b8:	82 2f       	mov	r24, r18
 6ba:	76 2f       	mov	r23, r22
 6bc:	6a 2f       	mov	r22, r26
 6be:	11 24       	eor	r1, r1
 6c0:	9f 57       	subi	r25, 0x7F	; 127
 6c2:	50 40       	sbci	r21, 0x00	; 0
 6c4:	8a f0       	brmi	.+34     	; 0x6e8 <__mulsf3_pse+0x84>
 6c6:	e1 f0       	breq	.+56     	; 0x700 <__mulsf3_pse+0x9c>
 6c8:	88 23       	and	r24, r24
 6ca:	4a f0       	brmi	.+18     	; 0x6de <__mulsf3_pse+0x7a>
 6cc:	ee 0f       	add	r30, r30
 6ce:	ff 1f       	adc	r31, r31
 6d0:	bb 1f       	adc	r27, r27
 6d2:	66 1f       	adc	r22, r22
 6d4:	77 1f       	adc	r23, r23
 6d6:	88 1f       	adc	r24, r24
 6d8:	91 50       	subi	r25, 0x01	; 1
 6da:	50 40       	sbci	r21, 0x00	; 0
 6dc:	a9 f7       	brne	.-22     	; 0x6c8 <__mulsf3_pse+0x64>
 6de:	9e 3f       	cpi	r25, 0xFE	; 254
 6e0:	51 05       	cpc	r21, r1
 6e2:	70 f0       	brcs	.+28     	; 0x700 <__mulsf3_pse+0x9c>
 6e4:	5c cf       	rjmp	.-328    	; 0x59e <__fp_inf>
 6e6:	a6 cf       	rjmp	.-180    	; 0x634 <__fp_szero>
 6e8:	5f 3f       	cpi	r21, 0xFF	; 255
 6ea:	ec f3       	brlt	.-6      	; 0x6e6 <__mulsf3_pse+0x82>
 6ec:	98 3e       	cpi	r25, 0xE8	; 232
 6ee:	dc f3       	brlt	.-10     	; 0x6e6 <__mulsf3_pse+0x82>
 6f0:	86 95       	lsr	r24
 6f2:	77 95       	ror	r23
 6f4:	67 95       	ror	r22
 6f6:	b7 95       	ror	r27
 6f8:	f7 95       	ror	r31
 6fa:	e7 95       	ror	r30
 6fc:	9f 5f       	subi	r25, 0xFF	; 255
 6fe:	c1 f7       	brne	.-16     	; 0x6f0 <__mulsf3_pse+0x8c>
 700:	fe 2b       	or	r31, r30
 702:	88 0f       	add	r24, r24
 704:	91 1d       	adc	r25, r1
 706:	96 95       	lsr	r25
 708:	87 95       	ror	r24
 70a:	97 f9       	bld	r25, 7
 70c:	08 95       	ret

0000070e <_exit>:
 70e:	f8 94       	cli

00000710 <__stop_program>:
 710:	ff cf       	rjmp	.-2      	; 0x710 <__stop_program>
